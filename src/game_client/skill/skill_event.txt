						技能系统的事件处理

[容器中的技能列表和效果列表同一个技能或效果有且仅有一个]

―――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
				[系统基本事件的处理]
元素基类
	=====统一的====
	1.定时事件
	=====效果=====
	2.能否增加事件[目前该事件处理不特殊，不需要脚本]
	3.增加效果事件
	4.删除效果事件

	=====技能=====
	5.能否使用技能事件
	6.使用技能事件
	7.a 是否能取消正在使用中技能的事件
	7.取消正在使用中技能的事件[分正常取消<可中断主动技能>和强制取消<任何主动技能>][主动技能,在准备和使用状态下取消]
	8.
	9.结束正在使用的技能事件[任何技能,在任何状态下都结束]

效果元素	[有相应的脚本]
	1.能否增加事件[目前该事件处理不特殊，不需要脚本]
	2.增加效果事件
	3.定时事件
	4.删除效果事件

技能元素	[有相应的脚本]
	1.能否使用技能事件
	2.使用技能事件
	3.定时事件[准备中][使用中][恢复中]
	4.a 是否能取消正在使用中技能的事件
	4.取消正在使用中技能的事件[分正常取消<可中断主动技能>和强制取消<任何主动技能>][主动技能,在准备和使用状态下取消]
	5.
	6.结束正在使用的技能事件[任何技能,在任何状态下都结束][将技能忘记时调用用]

	[能否增加技能到已会技能列表事件][技能自身并不做什么处理，故不需要]
	[增加技能到已会技能列表事件][技能自身并不做什么处理，故不需要]
	[删除技能从已会技能列表事件][技能自身并不做什么处理，故不需要]



容器		[有相应的脚本]
	1.技能能否学习事件
	2.技能学习事件
	[技能忘记事件][目前还没有忘记事件这样的需求，暂不需要]

	[能否增加技能到已会技能列表事件][目前还未碰到不能增加技能到已会技能列表的情况，暂不需要]
	3.增加技能到已会技能列表事件[目前该事件要处理的问题，很一般化，没有较特殊情况，故脚本暂不需要]
	4.删除技能从已会技能列表事件[目前该事件要处理的问题，很一般化，没有较特殊情况，故脚本暂不需要]

――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――
				[系统对外事件的接口]	
容器：
	=========统一的========
	1.定时事件[将定时事件发给使用中技能列表，和效果列表]

	========技能========
	------查询------
	2.查询已会技能列表中指定技能的等级[该技能不存在，等级为0]

	------学习------
	3.技能能否学习事件
	4.技能要求学习并增加到已学会技能事件
	5.技能学习事件[不对外公开]
	[技能忘记事件][目前还没有忘记事件这样的需求，暂不需要]

	------增加------
	[能否增加技能到已会技能列表事件][目前还未碰到不能增加技能到已会技能列表的情况，暂不需要]
	6.增加技能到已会技能列表事件[目前该事件要处理的问题，很一般化，没有较特殊情况，故脚本暂不需要]
	7.删除技能从已会技能列表事件[目前该事件要处理的问题，很一般化，没有较特殊情况，故脚本暂不需要]

	------使用------	
	8.能否使用技能事件[容器先处理后，将该事件转发给已会技能列表中的对应技能，如技能不存在，出错信息]
	9.要求使用技能[将调用技能的使用技能事件]
	9b.直接使用技能

	10.取消正在使用中技能的事件[主动技能和能激活的被动技能][分正常取消和强制取消][在准备和使用状态能取消][仅某个技能]
	11.a 是否能取消所有正在使用的主动技能的事件[不对外公开]
	11.取消所有正在使用的主动技能的事件[分正常取消和强制取消][在准备和使用状态下能取消]
	12.强制结束正在使用的技能事件[任何技能,在任何状态下都能结束][仅某个技能]
	13.强制结束所有正在使用的技能事件[任何技能,在任何状态下都结束]
	[正常结束使用][由OnTime自行调用]

	========效果========
	14.增加效果事件
	15.删除效果事件



		


